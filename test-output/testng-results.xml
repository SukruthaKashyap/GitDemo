<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="6" total="20" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Loan Department" duration-ms="51" started-at="2023-02-15T03:51:45Z" finished-at="2023-02-15T03:51:45Z">
    <groups>
      <group name="Smoke">
        <method signature="Basics.Wemo()[pri:0, instance:TestPackage.Basics@50c87b21]" name="Wemo" class="TestPackage.Basics"/>
        <method signature="Basics2.demo3()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="demo3" class="TestPackage.Basics2"/>
        <method signature="Basics3.Carlogin()[pri:0, instance:TestPackage.Basics3@28feb3fa]" name="Carlogin" class="TestPackage.Basics3"/>
        <method signature="Basics4.apilogin()[pri:0, instance:TestPackage.Basics4@39aeed2f]" name="apilogin" class="TestPackage.Basics4"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Car loan" duration-ms="13" started-at="2023-02-15T03:51:45Z" finished-at="2023-02-15T03:51:45Z">
      <class name="TestPackage.Basics3">
        <test-method status="PASS" signature="Carlogin()[pri:0, instance:TestPackage.Basics3@28feb3fa]" name="Carlogin" duration-ms="3" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Carlogin -->
      </class> <!-- TestPackage.Basics3 -->
    </test> <!-- Car loan -->
    <test name="Personal Loan" duration-ms="36" started-at="2023-02-15T03:51:45Z" finished-at="2023-02-15T03:51:45Z">
      <class name="TestPackage.Basics5">
        <test-method status="PASS" signature="demo(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.Basics5@32d992b2]" name="demo" duration-ms="1" started-at="2023-02-15T09:21:45Z" data-provider="getdata" finished-at="2023-02-15T09:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPWD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="demo(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.Basics5@32d992b2]" name="demo" duration-ms="0" started-at="2023-02-15T09:21:45Z" data-provider="getdata" finished-at="2023-02-15T09:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondUN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Secondpwd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="demo(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.Basics5@32d992b2]" name="demo" duration-ms="0" started-at="2023-02-15T09:21:45Z" data-provider="getdata" finished-at="2023-02-15T09:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdPWD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- TestPackage.Basics5 -->
      <class name="TestPackage.Basics2">
        <test-method status="PASS" signature="prerequired()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="prerequired" is-config="true" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequired -->
        <test-method status="PASS" signature="before()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="before" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="demo3()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="demo3" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo3 -->
        <test-method status="PASS" signature="repeatmethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeatmethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeatmethod -->
        <test-method status="PASS" signature="repeatmethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeatmethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeatmethod -->
        <test-method status="PASS" signature="repeataftermethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeataftermethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeataftermethod -->
        <test-method status="PASS" signature="dummy()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="dummy" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummy -->
        <test-method status="PASS" signature="home(java.lang.String)[pri:0, instance:TestPackage.Basics2@6d78f375]" name="home" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[personal.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- home -->
        <test-method status="PASS" signature="repeatmethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeatmethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeatmethod -->
        <test-method status="PASS" signature="repeataftermethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeataftermethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeataftermethod -->
        <test-method status="PASS" signature="repeatmethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeatmethod" is-config="true" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeatmethod -->
        <test-method status="PASS" signature="repeataftermethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeataftermethod" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeataftermethod -->
        <test-method status="PASS" signature="personal()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="personal" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personal -->
        <test-method status="PASS" signature="repeataftermethod()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="repeataftermethod" is-config="true" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- repeataftermethod -->
        <test-method status="PASS" signature="After()[pri:0, instance:TestPackage.Basics2@6d78f375]" name="After" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- After -->
      </class> <!-- TestPackage.Basics2 -->
      <class name="TestPackage.Basics">
        <test-method status="PASS" signature="Demo2(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.Basics@50c87b21]" name="Demo2" duration-ms="2" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclick.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[255768788]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method status="FAIL" signature="Demo4()[pri:0, instance:TestPackage.Basics@50c87b21]" name="Demo4" duration-ms="2" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at TestPackage.Basics.Demo4(Basics.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo4 -->
        <test-method status="PASS" signature="Demo6()[pri:0, instance:TestPackage.Basics@50c87b21]" name="Demo6" duration-ms="2" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo6 -->
        <test-method status="PASS" signature="Wemo()[pri:0, instance:TestPackage.Basics@50c87b21]" name="Wemo" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Wemo -->
        <test-method status="PASS" signature="lastexecution()[pri:0, instance:TestPackage.Basics@50c87b21]" name="lastexecution" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
        <test-method status="SKIP" signature="Demo3()[pri:0, instance:TestPackage.Basics@50c87b21]" name="Demo3" duration-ms="0" started-at="2023-02-15T09:21:45Z" depends-on-methods="TestPackage.Basics.Wemo, TestPackage.Basics.Demo4" finished-at="2023-02-15T09:21:45Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Basics.Demo3()[pri:0, instance:TestPackage.Basics@50c87b21] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Basics.Demo3()[pri:0, instance:TestPackage.Basics@50c87b21] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
      </class> <!-- TestPackage.Basics -->
    </test> <!-- Personal Loan -->
    <test name="Home loan" duration-ms="3" started-at="2023-02-15T03:51:45Z" finished-at="2023-02-15T03:51:45Z">
      <class name="TestPackage.Basics4">
        <test-method status="PASS" signature="highpriority()[pri:0, instance:TestPackage.Basics4@39aeed2f]" name="highpriority" is-config="true" duration-ms="6" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- highpriority -->
        <test-method status="PASS" signature="apilogin()[pri:0, instance:TestPackage.Basics4@39aeed2f]" name="apilogin" duration-ms="1" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apilogin -->
        <test-method status="PASS" signature="lastpriority()[pri:0, instance:TestPackage.Basics4@39aeed2f]" name="lastpriority" is-config="true" duration-ms="0" started-at="2023-02-15T09:21:45Z" finished-at="2023-02-15T09:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastpriority -->
      </class> <!-- TestPackage.Basics4 -->
    </test> <!-- Home loan -->
  </suite> <!-- Loan Department -->
</testng-results>
